import "./Quantico-Regular-linegap5.ttf";

import { Button } from "std-widgets.slint";

export component TimePicker inherits Window {
    width: 200px;
    height: 200px;
    default-font-family: "Quantico";

    in-out property <int> hour_tens: 1;
    in-out property <int> hour_units: 2;
    in-out property <int> minute_tens: 0;
    in-out property <int> minute_units: 0;

    in property <int> hours: hour_tens * 10 + hour_units;
    in property <int> minutes: minute_tens * 10 + minute_units;

    // Internal
    in property <float> text_size: 0.07;
    in property <length> button_container_width: root.width * ((1 - dot_size) / 4);
    // Do
    in property <float> dot_size: 0.05;
    in property <length> dot_border_radius: 5px;
    in property <float> dot_space_width: 0.5;
    in property <float> dot_space_height: 0.45;

    VerticalLayout {
        width: root.width;
        height: root.width;

        GridLayout {
            Row {
                // Hour Tens
                VerticalLayout {
                    width: button_container_width;
                    Button {
                        text: "▲";
                        clicked => {
                            hour_tens = Math.mod(hour_tens + 1, 3); // 0, 1, 2
                            if (hour_tens == 2 && hour_units > 3) {
                                hour_units = 3;
                            }
                        }
                    }
                    Text {
                        text: hour_tens;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                    Button {
                        text: "▼";
                        clicked => {
                            hour_tens = Math.mod(hour_tens - 1 + 3, 3); // 0, 1, 2
                            if (hour_tens == 2 && hour_units > 3) {
                                hour_units = 3;
                            }
                        }
                    }
                }

                // Hour Units
                VerticalLayout {
                    width: button_container_width;
                    Button {
                        text: "▲";
                        clicked => {
                            if (hour_tens == 2) {
                                hour_units = Math.mod(hour_units + 1, 4); // 0, 1, 2, 3
                            } else {
                                hour_units = Math.mod(hour_units + 1, 10); // 0-9
                            }
                        }
                    }
                    Text {
                        text: hour_units;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                    Button {
                        text: "▼";
                        clicked => {
                            if (hour_tens == 2) {
                                hour_units = Math.mod(hour_units - 1 + 4, 4); // 0, 1, 2, 3
                            } else {
                                hour_units = Math.mod(hour_units - 1 + 10, 10); // 0-9
                            }
                        }
                    }
                }

                VerticalLayout {
                    alignment: center;
                    width: root.width * dot_size;
                    Rectangle {
                        width: root.width * dot_size;
                        height: root.height * dot_size;
                        border-radius: dot_border_radius;
                        background: black;
                    }

                    Rectangle {
                        width: (root.width * dot_size) * dot_space_width;
                        height: (root.width * dot_size) * dot_space_height;
                        border-radius: dot_border_radius;
                        background: transparent;
                    }

                    Rectangle {
                        width: root.width * dot_size;
                        height: root.height * dot_size;
                        border-radius: dot_border_radius;
                        background: black;
                    }
                }

                // Minute Tens
                VerticalLayout {
                    width: button_container_width;
                    Button {
                        text: "▲";
                        clicked => {
                            minute_tens = Math.mod(minute_tens + 1, 6); // 0-5
                        }
                    }
                    Text {
                        text: minute_tens;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                    Button {
                        text: "▼";
                        clicked => {
                            minute_tens = Math.mod(minute_tens - 1 + 6, 6); // 0-5
                        }
                    }
                }

                // Minute Units
                VerticalLayout {
                    width: button_container_width;
                    Button {
                        text: "▲";
                        clicked => {
                            minute_units = Math.mod(minute_units + 1, 10); // 0-9
                        }
                    }
                    Text {
                        text: minute_units;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                    Button {
                        text: "▼";
                        clicked => {
                            minute_units = Math.mod(minute_units - 1 + 10, 10); // 0-9
                        }
                    }
                }
            }
        }
    }
}