import "./FiraSans-Medium.ttf";

import { Button } from "std-widgets.slint";

export component TimePicker inherits Window {
    width: 200px;
    height: 200px;
    default-font-family: "Fira Sans";
    forward-focus: my-key-handler;

    in-out property <int> hour_tens: 1;
    in-out property <int> hour_units: 2;
    in-out property <int> minute_tens: 0;
    in-out property <int> minute_units: 0;

    in property <int> hours: hour_tens * 10 + hour_units;
    in property <int> minutes: minute_tens * 10 + minute_units;

    in-out property <int> selected_row: 1; // 1: Hour Tens, 2: Hour Units, 3: Minute Tens, 4: Minute Units

    // Internal
    in property <length> text_size: root.height * 0.3;
    // Dot
    in property <float> dot_size: 0.05;
    in property <length> dot_border_radius: 5px;
    in property <float> dot_space_width: 0.5;
    in property <float> dot_space_height: 0.45;
    // Button
    in property <length> button_container_width: (root.width * ((1 - dot_size) / 4)) * 0.9;
    in property <length> button_border_width: 3px;
    in property <length> button_border_radius: 4px;
    in property <length> rectangle_border_radius: 4px;
    in property <color> button_border_color: black;

    VerticalLayout {
        width: root.width;
        height: root.width;
        my-key-handler := FocusScope {
            key-pressed(event) => {
                if (event.text == "w") {
                    if (selected_row == 1) {
                        hour_tens = Math.mod(hour_tens + 1, 3);
                        if (hour_tens == 2 && hour_units > 3) {
                            hour_units = 3;
                        }
                    } else if (selected_row == 2) {
                        if (hour_tens == 2) {
                            hour_units = Math.mod(hour_units + 1, 4);
                        } else {
                            hour_units = Math.mod(hour_units + 1, 10);
                        }
                    } else if (selected_row == 3) {
                        minute_tens = Math.mod(minute_tens + 1, 6);
                    } else if (selected_row == 4) {
                        minute_units = Math.mod(minute_units + 1, 10);
                    }
                    return EventResult.accept;
                } else if (event.text == "s") {
                    if (selected_row == 1) {
                        hour_tens = Math.mod(hour_tens - 1 + 3, 3);
                        if (hour_tens == 2 && hour_units > 3) {
                            hour_units = 3;
                        }
                    } else if (selected_row == 2) {
                        if (hour_tens == 2) {
                            hour_units = Math.mod(hour_units - 1 + 4, 4);
                        } else {
                            hour_units = Math.mod(hour_units - 1 + 10, 10);
                        }
                    } else if (selected_row == 3) {
                        minute_tens = Math.mod(minute_tens - 1 + 6, 6);
                    } else if (selected_row == 4) {
                        minute_units = Math.mod(minute_units - 1 + 10, 10);
                    }
                    return EventResult.accept;
                } else if (event.text == "a") {
                    selected_row = Math.mod(selected_row, 4) + 1;
                    return EventResult.accept;
                }
                return EventResult.reject;
            }

            GridLayout {
                HorizontalLayout {
                    alignment: space-around;
                // Hour Tens
                VerticalLayout {
                        width: button_container_width;
                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 1 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▲";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 1 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        hour_tens = Math.mod(hour_tens + 1, 3); // 0, 1, 2
                                    if (hour_tens == 2 && hour_units > 3) {
                                            hour_units = 3;
                                        }
                                    }
                                }
                            }
                        }

                        Text {
                            text: hour_tens;
                            font-size: text_size;
                            horizontal-alignment: center;
                            vertical-alignment: center;
                        }

                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 1 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▼";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 1 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        hour_tens = Math.mod(hour_tens - 1 + 3, 3); // 0, 1, 2
                                    if (hour_tens == 2 && hour_units > 3) {
                                            hour_units = 3;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    // Hour Units
                VerticalLayout {
                        width: button_container_width;
                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 2 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▲";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 2 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        if (hour_tens == 2) {
                                            hour_units = Math.mod(hour_units + 1, 4); // 0, 1, 2, 3
                                    } else {
                                            hour_units = Math.mod(hour_units + 1, 10); // 0-9
                                    }
                                    }
                                }
                            }
                        }

                        Text {
                            text: hour_units;
                            font-size: text_size;
                            horizontal-alignment: center;
                            vertical-alignment: center;
                        }

                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 2 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▼";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 2 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        if (hour_tens == 2) {
                                            hour_units = Math.mod(hour_units - 1 + 4, 4); // 0, 1, 2, 3
                                    } else {
                                            hour_units = Math.mod(hour_units - 1 + 10, 10); // 0-9
                                    }
                                    }
                                }
                            }
                        }
                    }

                    VerticalLayout {
                        alignment: center;
                        width: root.width * dot_size;
                        Rectangle {
                            width: root.width * dot_size;
                            height: root.height * dot_size;
                            border-radius: dot_border_radius;
                            background: black;
                        }

                        Rectangle {
                            width: (root.width * dot_size) * dot_space_width;
                            height: (root.width * dot_size) * dot_space_height;
                            border-radius: dot_border_radius;
                            background: transparent;
                        }

                        Rectangle {
                            width: root.width * dot_size;
                            height: root.height * dot_size;
                            border-radius: dot_border_radius;
                            background: black;
                        }
                    }

                    // Minute Tens
                VerticalLayout {
                        width: button_container_width;
                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 3 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▲";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 3 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        minute_tens = Math.mod(minute_tens + 1, 6); // 0-5
                                }
                                }
                            }
                        }

                        Text {
                            text: minute_tens;
                            font-size: text_size;
                            horizontal-alignment: center;
                            vertical-alignment: center;
                        }

                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 3 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▼";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 3 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        minute_tens = Math.mod(minute_tens - 1 + 6, 6); // 0-5
                                }
                                }
                            }
                        }
                    }

                    // Minute Units
                VerticalLayout {
                        width: button_container_width;
                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 4 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▲";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 4 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        minute_units = Math.mod(minute_units + 1, 10); // 0-9
                                }
                                }
                            }
                        }

                        Text {
                            text: minute_units;
                            font-size: text_size;
                            horizontal-alignment: center;
                            vertical-alignment: center;
                        }

                        Rectangle {
                            background: button_border_color;
                            border-radius: rectangle_border_radius;

                            Rectangle {
                                x: button_border_width;
                                y: button_border_width;
                                width: parent.width - (2 * button_border_width);
                                height: parent.height - (2 * button_border_width);
                                background: selected_row == 4 ? black : white;
                                border-radius: button_border_radius;

                                Text {
                                    text: "▼";
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    width: parent.width;
                                    height: parent.height;
                                    color: selected_row == 4 ? white : black;
                                }

                                TouchArea {
                                    clicked => {
                                        minute_units = Math.mod(minute_units - 1 + 10, 10); // 0-9
                                }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
