import "./Quantico-Regular-linegap5.ttf";

import { Button } from "std-widgets.slint";

export component TimePicker inherits Window {
    width: 200px;
    height: 200px;
    default-font-family: "Quantico";

    in-out property <int> hours: 12;
    in-out property <int> minutes: 00;

    // Internal
    in property <float> text_size: 0.07;
    // Do
    in property <float> dot_size: 0.05;
    in property <length> dot_border_radius: 5px;
    in property <float> dot_space_width: 0.5;
    in property <float> dot_space_height: 0.45;

    VerticalLayout {
        width: root.width;
        height: root.width;

        GridLayout {
            Row {
                VerticalLayout {
                    width: root.width * ((1 - dot_size) / 2);
                    Button {
                        text: "▲";
                        clicked => {
                            root.hours = Math.mod(root.hours + 1, 24);
                        }
                    }

                    Text {
                        text: hours < 10 ? "0" + hours : hours;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }

                    Button {
                        text: "▼";
                        clicked => {
                            root.hours = Math.mod(root.hours - 1, 24);
                        }
                    }
                }

                VerticalLayout {
                    alignment: center;
                    width: root.width * dot_size;
                    Rectangle {
                        width: root.width * dot_size;
                        height: root.height * dot_size;
                        border-radius: dot_border_radius;
                        background: black;
                    }

                    Rectangle {
                        width: (root.width * dot_size) * dot_space_width;
                        height: (root.width * dot_size) * dot_space_height;
                        border-radius: dot_border_radius;
                        background: transparent;
                    }

                    Rectangle {
                        width: root.width * dot_size;
                        height: root.height * dot_size;
                        border-radius: dot_border_radius;
                        background: black;
                    }
                }

                VerticalLayout {
                    width: root.width * ((1 - dot_size) / 2);

                    Button {
                        text: "▲";
                        clicked => {
                            root.minutes = Math.mod(root.minutes + 1, 60);
                        }
                    }

                    Text {
                        text: minutes < 10 ? "0" + minutes : minutes;
                        font-size: root.height * 0.2;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }

                    Button {
                        text: "▼";
                        clicked => {
                            root.minutes = Math.mod(root.minutes - 1, 60);
                        }
                    }
                }
            }

            /*
        Text {
            text: "Selected: " + (hours < 10 ? "0" + hours : hours) + ":" + (minutes < 10 ? "0" + minutes : minutes);
            horizontal-alignment: center;
        }
        */
    }
    }
}